# Generated by Django 5.0.7 on 2024-07-24 19:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('country', models.CharField(blank=True, max_length=150, null=True, verbose_name='Страна')),
                ('city', models.CharField(max_length=150, verbose_name='Город')),
                ('street', models.CharField(blank=True, max_length=150, null=True, verbose_name='Улица')),
                ('home_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='Номер дома')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название продукта')),
                ('model', models.CharField(max_length=150, verbose_name='Модель')),
                ('release_date', models.DateField(verbose_name='Дата выхода продукта на рынок')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название завода')),
                ('creation_time', models.TimeField(auto_now_add=True, verbose_name='Время создания')),
                ('provider_debt', models.FloatField(verbose_name='Задолженность перед поставщиком')),
                ('contacts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='electronics_shop.contacts', verbose_name='Контакты')),
            ],
            options={
                'verbose_name': 'Завод',
                'verbose_name_plural': 'Заводы',
            },
        ),
        migrations.CreateModel(
            name='IndividualEntrepreneur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название ИП')),
                ('provider_debt', models.FloatField(verbose_name='Задолженность перед поставщиком')),
                ('creation_time', models.TimeField(auto_now_add=True, verbose_name='Время создания')),
                ('contacts', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='electronics_shop.contacts', verbose_name='Контакты')),
                ('factory_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='electronics_shop.factory', verbose_name='Завод поставщик')),
                ('products', models.ManyToManyField(blank=True, null=True, to='electronics_shop.product', verbose_name='Продукты')),
            ],
            options={
                'verbose_name': 'Индивидуальный предпринематель',
                'verbose_name_plural': 'Индивидуальные предпринематели',
            },
        ),
        migrations.AddField(
            model_name='factory',
            name='individual_entreprereur_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='electronics_shop.individualentrepreneur', verbose_name='ИП поставщик'),
        ),
        migrations.AddField(
            model_name='factory',
            name='products',
            field=models.ManyToManyField(blank=True, null=True, to='electronics_shop.product', verbose_name='Продукты'),
        ),
        migrations.CreateModel(
            name='RetailNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название сети')),
                ('provider_debt', models.FloatField(verbose_name='Задолженность перед поставщиком')),
                ('creation_time', models.TimeField(auto_now_add=True, verbose_name='Время создания')),
                ('contacts', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='electronics_shop.contacts', verbose_name='Контакты')),
                ('factory_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='electronics_shop.factory', verbose_name='Завод поставщик')),
                ('individual_entreprereur_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='electronics_shop.individualentrepreneur', verbose_name='ИП поставщик')),
                ('products', models.ManyToManyField(blank=True, null=True, to='electronics_shop.product', verbose_name='Продукты')),
            ],
            options={
                'verbose_name': 'Розничная сеть',
                'verbose_name_plural': 'Розничные сети',
            },
        ),
        migrations.AddField(
            model_name='individualentrepreneur',
            name='retail_network_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='electronics_shop.retailnetwork', verbose_name='Сеть розничной продукции'),
        ),
        migrations.AddField(
            model_name='factory',
            name='retail_network_supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='electronics_shop.retailnetwork', verbose_name='Сеть розничной продукции'),
        ),
    ]
